ARM GAS  /tmp/cculvRRN.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"custom_memory_manager.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c"
  20              		.section	.text.prvHeapInit,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	prvHeapInit:
  27              	.LFB12:
   1:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*
   2:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****  * A custom implementation of pvPortMallocMicroROS() and vPortFreeMicroROS() with realloc and
   3:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****  * calloc features based on FreeRTOS heap4.c.
   4:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****  */
   5:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****  
   6:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** #include <stdlib.h>
   7:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** #include <string.h>
   8:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
   9:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  10:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** all the API functions to use the MPU wrappers.  That should only be done when
  11:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** task.h is included from an application file. */
  12:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  13:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
  14:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** #include "FreeRTOS.h"
  15:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** #include "task.h"
  16:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
  17:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  18:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
  19:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 0 )
  20:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	#error This file must not be used if configSUPPORT_DYNAMIC_ALLOCATION is 0
  21:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** #endif
  22:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
  23:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /* Block sizes must not get too small. */
  24:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** #define heapMINIMUM_BLOCK_SIZE	( ( size_t ) ( xHeapStructSize << 1 ) )
  25:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
  26:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /* Assumes 8bit bytes! */
  27:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** #define heapBITS_PER_BYTE		( ( size_t ) 8 )
  28:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
  29:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /* Allocate the memory for the heap. */
  30:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** static uint8_t ucHeap[ configTOTAL_HEAP_SIZE ];
  31:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
ARM GAS  /tmp/cculvRRN.s 			page 2


  32:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /* Define the linked list structure.  This is used to link free blocks in order
  33:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** of their memory address. */
  34:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** typedef struct A_BLOCK_LINK
  35:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** {
  36:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	struct A_BLOCK_LINK *pxNextFreeBlock;	/*<< The next free block in the list. */
  37:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	size_t xBlockSize;						/*<< The size of the free block. */
  38:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** } BlockLink_t;
  39:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
  40:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
  41:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
  42:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*
  43:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****  * Inserts a block of memory that is being freed into the correct position in
  44:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****  * the list of free memory blocks.  The block being freed will be merged with
  45:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****  * the block in front it and/or the block behind it if the memory blocks are
  46:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****  * adjacent to each other.
  47:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****  */
  48:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert );
  49:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
  50:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*
  51:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****  * Called automatically to setup the required heap structures the first time
  52:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****  * pvPortMallocMicroROS() is called.
  53:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****  */
  54:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** static void prvHeapInit( void );
  55:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
  56:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
  57:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
  58:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /* The size of the structure placed at the beginning of each allocated memory
  59:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** block must by correctly byte aligned. */
  60:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** static const size_t xHeapStructSize	= ( sizeof( BlockLink_t ) + ( ( size_t ) ( portBYTE_ALIGNMENT -
  61:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
  62:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /* Create a couple of list links to mark the start and end of the list. */
  63:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** static BlockLink_t xStart, *pxEnd = NULL;
  64:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
  65:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /* Keeps track of the number of free bytes remaining, but says nothing about
  66:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** fragmentation. */
  67:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** static size_t xFreeBytesRemaining = 0U;
  68:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** static size_t xMinimumEverFreeBytesRemaining = 0U;
  69:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
  70:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /* Gets set to the top bit of an size_t type.  When this bit in the xBlockSize
  71:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** member of an BlockLink_t structure is set then the block belongs to the
  72:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** application.  When the bit is free the block is still part of the free heap
  73:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** space. */
  74:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** static size_t xBlockAllocatedBit = 0;
  75:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
  76:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
  77:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
  78:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** void *pvPortMallocMicroROS( size_t xWantedSize )
  79:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** {
  80:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
  81:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** void *pvReturn = NULL;
  82:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
  83:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	vTaskSuspendAll();
  84:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	{
  85:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		/* If this is the first call to malloc then the heap will require
  86:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		initialisation to setup the list of free blocks. */
  87:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		if( pxEnd == NULL )
  88:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
ARM GAS  /tmp/cculvRRN.s 			page 3


  89:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			prvHeapInit();
  90:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		}
  91:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		else
  92:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
  93:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			mtCOVERAGE_TEST_MARKER();
  94:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		}
  95:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
  96:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		/* Check the requested block size is not so large that the top bit is
  97:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		set.  The top bit of the block size member of the BlockLink_t structure
  98:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		is used to determine who owns the block - the application or the
  99:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		kernel, so it must be free. */
 100:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 101:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
 102:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			/* The wanted size is increased so it can contain a BlockLink_t
 103:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			structure in addition to the requested amount of bytes. */
 104:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			if( xWantedSize > 0 )
 105:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			{
 106:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				xWantedSize += xHeapStructSize;
 107:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 108:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				/* Ensure that blocks are always aligned to the required number
 109:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				of bytes. */
 110:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 111:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				{
 112:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					/* Byte alignment required. */
 113:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 114:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					configASSERT( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) == 0 );
 115:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				}
 116:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				else
 117:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				{
 118:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					mtCOVERAGE_TEST_MARKER();
 119:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				}
 120:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			}
 121:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			else
 122:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			{
 123:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				mtCOVERAGE_TEST_MARKER();
 124:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			}
 125:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 126:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 127:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			{
 128:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				/* Traverse the list from the start	(lowest address) block until
 129:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				one	of adequate size is found. */
 130:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				pxPreviousBlock = &xStart;
 131:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				pxBlock = xStart.pxNextFreeBlock;
 132:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 133:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				{
 134:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					pxPreviousBlock = pxBlock;
 135:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					pxBlock = pxBlock->pxNextFreeBlock;
 136:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				}
 137:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 138:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				/* If the end marker was reached then a block of adequate size
 139:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				was	not found. */
 140:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				if( pxBlock != pxEnd )
 141:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				{
 142:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					/* Return the memory space pointed to - jumping over the
 143:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					BlockLink_t structure at its start. */
 144:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize )
 145:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
ARM GAS  /tmp/cculvRRN.s 			page 4


 146:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					/* This block is being returned for use so must be taken out
 147:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					of the list of free blocks. */
 148:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 149:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 150:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					/* If the block is larger than required it can be split into
 151:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					two. */
 152:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 153:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					{
 154:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 						/* This block is to be split into two.  Create a new
 155:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 						block following the number of bytes requested. The void
 156:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 						cast is used to prevent byte alignment warnings from the
 157:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 						compiler. */
 158:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 159:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 160:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 161:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 						/* Calculate the sizes of two blocks split from the
 162:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 						single block. */
 163:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 164:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 						pxBlock->xBlockSize = xWantedSize;
 165:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 166:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 						/* Insert the new block into the list of free blocks. */
 167:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 						prvInsertBlockIntoFreeList( pxNewBlockLink );
 168:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					}
 169:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					else
 170:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					{
 171:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 						mtCOVERAGE_TEST_MARKER();
 172:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					}
 173:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 174:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					xFreeBytesRemaining -= pxBlock->xBlockSize;
 175:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 176:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 177:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					{
 178:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 179:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					}
 180:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					else
 181:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					{
 182:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 						mtCOVERAGE_TEST_MARKER();
 183:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					}
 184:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 185:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					/* The block is being returned - it is allocated and owned
 186:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					by the application and has no "next" block. */
 187:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					pxBlock->xBlockSize |= xBlockAllocatedBit;
 188:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					pxBlock->pxNextFreeBlock = NULL;
 189:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				}
 190:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				else
 191:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				{
 192:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					mtCOVERAGE_TEST_MARKER();
 193:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				}
 194:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			}
 195:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			else
 196:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			{
 197:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				mtCOVERAGE_TEST_MARKER();
 198:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			}
 199:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		}
 200:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		else
 201:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
 202:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			mtCOVERAGE_TEST_MARKER();
ARM GAS  /tmp/cculvRRN.s 			page 5


 203:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		}
 204:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 205:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		traceMALLOC( pvReturn, xWantedSize );
 206:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	}
 207:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	( void ) xTaskResumeAll();
 208:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 209:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	#if( configUSE_MALLOC_FAILED_HOOK == 1 )
 210:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	{
 211:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		if( pvReturn == NULL )
 212:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
 213:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			extern void vApplicationMallocFailedHook( void );
 214:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			vApplicationMallocFailedHook();
 215:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		}
 216:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		else
 217:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
 218:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			mtCOVERAGE_TEST_MARKER();
 219:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		}
 220:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	}
 221:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	#endif
 222:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 223:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 224:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	return pvReturn;
 225:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** }
 226:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 227:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 228:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** void vPortFreeMicroROS( void *pv )
 229:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** {
 230:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** uint8_t *puc = ( uint8_t * ) pv;
 231:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** BlockLink_t *pxLink;
 232:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 233:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	if( pv != NULL )
 234:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	{
 235:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		/* The memory being freed will have an BlockLink_t structure immediately
 236:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		before it. */
 237:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		puc -= xHeapStructSize;
 238:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 239:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		/* This casting is to keep the compiler from issuing warnings. */
 240:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		pxLink = ( void * ) puc;
 241:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 242:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		/* Check the block is actually allocated. */
 243:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 244:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		configASSERT( pxLink->pxNextFreeBlock == NULL );
 245:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 246:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		if( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 )
 247:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
 248:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			if( pxLink->pxNextFreeBlock == NULL )
 249:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			{
 250:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				/* The block is being returned to the heap - it is no longer
 251:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				allocated. */
 252:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 253:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 254:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				vTaskSuspendAll();
 255:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				{
 256:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					/* Add this block to the list of free blocks. */
 257:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					xFreeBytesRemaining += pxLink->xBlockSize;
 258:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					traceFREE( pv, pxLink->xBlockSize );
 259:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
ARM GAS  /tmp/cculvRRN.s 			page 6


 260:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				}
 261:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				( void ) xTaskResumeAll();
 262:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			}
 263:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			else
 264:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			{
 265:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				mtCOVERAGE_TEST_MARKER();
 266:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			}
 267:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		}
 268:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		else
 269:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
 270:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			mtCOVERAGE_TEST_MARKER();
 271:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		}
 272:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	}
 273:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** }
 274:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 275:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 276:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 277:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** size_t getBlockSize( void *pv )
 278:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** {
 279:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 280:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	uint8_t *puc = ( uint8_t * ) pv;
 281:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	BlockLink_t *pxLink;
 282:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 283:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	puc -= xHeapStructSize;
 284:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	pxLink = ( void * ) puc;
 285:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 286:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	size_t count = pxLink->xBlockSize & ~xBlockAllocatedBit;
 287:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 288:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	return count;
 289:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** }
 290:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 291:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 292:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** void *pvPortReallocMicroROS( void *pv, size_t xWantedSize )
 293:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** {
 294:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	vTaskSuspendAll();
 295:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 296:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	void * newmem = pvPortMallocMicroROS(xWantedSize);
 297:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	if (newmem != NULL && pv != NULL)
 298:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	{
 299:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		size_t count = getBlockSize(pv) - xHeapStructSize;
 300:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		if (xWantedSize < count)
 301:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
 302:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			count = xWantedSize;
 303:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		}
 304:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		memcpy(newmem, pv, count);
 305:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 306:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		vPortFreeMicroROS(pv);
 307:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	}
 308:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 309:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	( void ) xTaskResumeAll();
 310:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 311:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	return newmem;
 312:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** }
 313:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 314:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 315:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** void *pvPortCallocMicroROS( size_t num, size_t xWantedSize )
 316:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** {
ARM GAS  /tmp/cculvRRN.s 			page 7


 317:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	vTaskSuspendAll();
 318:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	size_t count = xWantedSize*num;
 319:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 320:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	void * mem = pvPortMallocMicroROS(count);
 321:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****   	char *in_dest = (char*)mem;
 322:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 323:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****   	while(count--)
 324:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****     	*in_dest++ = 0;
 325:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 326:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	( void ) xTaskResumeAll();
 327:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****   	return mem;
 328:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** }
 329:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 330:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 331:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** size_t xPortGetFreeHeapSizeMicroROS( void )
 332:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** {
 333:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	return xFreeBytesRemaining;
 334:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** }
 335:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 336:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 337:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** size_t xPortGetMinimumEverFreeHeapSizeMicroROS( void )
 338:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** {
 339:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	return xMinimumEverFreeBytesRemaining;
 340:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** }
 341:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 342:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 343:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** void vPortInitialiseBlocksMicroROS( void )
 344:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** {
 345:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	/* This just exists to keep the linker quiet. */
 346:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** }
 347:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 348:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 349:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** static void prvHeapInit( void )
 350:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** {
  28              		.loc 1 350 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 351:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** BlockLink_t *pxFirstFreeBlock;
  33              		.loc 1 351 1 view .LVU1
 352:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** uint8_t *pucAlignedHeap;
  34              		.loc 1 352 1 view .LVU2
 353:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** size_t uxAddress;
  35              		.loc 1 353 1 view .LVU3
 354:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
  36              		.loc 1 354 1 view .LVU4
  37              	.LVL0:
 355:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 356:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	/* Ensure the heap starts on a correctly aligned boundary. */
 357:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	uxAddress = ( size_t ) ucHeap;
  38              		.loc 1 357 2 view .LVU5
  39              		.loc 1 357 12 is_stmt 0 view .LVU6
  40 0000 124A     		ldr	r2, .L4
  41              	.LVL1:
 358:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 359:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
ARM GAS  /tmp/cculvRRN.s 			page 8


  42              		.loc 1 359 2 is_stmt 1 view .LVU7
  43              		.loc 1 359 4 is_stmt 0 view .LVU8
  44 0002 12F0070F 		tst	r2, #7
  45 0006 1ED0     		beq	.L3
 360:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	{
 361:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		uxAddress += ( portBYTE_ALIGNMENT - 1 );
  46              		.loc 1 361 3 is_stmt 1 view .LVU9
  47              		.loc 1 361 13 is_stmt 0 view .LVU10
  48 0008 D11D     		adds	r1, r2, #7
  49              	.LVL2:
 362:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
  50              		.loc 1 362 3 is_stmt 1 view .LVU11
  51              		.loc 1 362 13 is_stmt 0 view .LVU12
  52 000a 21F00701 		bic	r1, r1, #7
  53              	.LVL3:
 363:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
  54              		.loc 1 363 3 is_stmt 1 view .LVU13
  55              		.loc 1 363 18 is_stmt 0 view .LVU14
  56 000e C1F57053 		rsb	r3, r1, #15360
  57 0012 1344     		add	r3, r3, r2
  58              	.LVL4:
 362:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
  59              		.loc 1 362 13 view .LVU15
  60 0014 0A46     		mov	r2, r1
  61              	.LVL5:
  62              	.L2:
 364:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	}
 365:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 366:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	pucAlignedHeap = ( uint8_t * ) uxAddress;
  63              		.loc 1 366 2 is_stmt 1 view .LVU16
 367:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 368:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	/* xStart is used to hold a pointer to the first item in the list of free
 369:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	blocks.  The void cast is used to prevent compiler warnings. */
 370:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
  64              		.loc 1 370 2 view .LVU17
  65              		.loc 1 370 25 is_stmt 0 view .LVU18
  66 0016 0E48     		ldr	r0, .L4+4
  67 0018 0260     		str	r2, [r0]
 371:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	xStart.xBlockSize = ( size_t ) 0;
  68              		.loc 1 371 2 is_stmt 1 view .LVU19
  69              		.loc 1 371 20 is_stmt 0 view .LVU20
  70 001a 0021     		movs	r1, #0
  71 001c 4160     		str	r1, [r0, #4]
 372:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 373:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	/* pxEnd is used to mark the end of the list of free blocks and is inserted
 374:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	at the end of the heap space. */
 375:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
  72              		.loc 1 375 2 is_stmt 1 view .LVU21
  73              		.loc 1 375 12 is_stmt 0 view .LVU22
  74 001e 1344     		add	r3, r3, r2
  75              	.LVL6:
 376:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	uxAddress -= xHeapStructSize;
  76              		.loc 1 376 2 is_stmt 1 view .LVU23
  77              		.loc 1 376 12 is_stmt 0 view .LVU24
  78 0020 083B     		subs	r3, r3, #8
  79              	.LVL7:
 377:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
ARM GAS  /tmp/cculvRRN.s 			page 9


  80              		.loc 1 377 2 is_stmt 1 view .LVU25
  81              		.loc 1 377 12 is_stmt 0 view .LVU26
  82 0022 23F00703 		bic	r3, r3, #7
  83              	.LVL8:
 378:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	pxEnd = ( void * ) uxAddress;
  84              		.loc 1 378 2 is_stmt 1 view .LVU27
  85              		.loc 1 378 8 is_stmt 0 view .LVU28
  86 0026 0B48     		ldr	r0, .L4+8
  87 0028 0360     		str	r3, [r0]
 379:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	pxEnd->xBlockSize = 0;
  88              		.loc 1 379 2 is_stmt 1 view .LVU29
  89              		.loc 1 379 20 is_stmt 0 view .LVU30
  90 002a 5960     		str	r1, [r3, #4]
 380:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	pxEnd->pxNextFreeBlock = NULL;
  91              		.loc 1 380 2 is_stmt 1 view .LVU31
  92              		.loc 1 380 25 is_stmt 0 view .LVU32
  93 002c 1960     		str	r1, [r3]
 381:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 382:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	/* To start with there is a single free block that is sized to take up the
 383:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	entire heap space, minus the space taken by pxEnd. */
 384:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	pxFirstFreeBlock = ( void * ) pucAlignedHeap;
  94              		.loc 1 384 2 is_stmt 1 view .LVU33
  95              	.LVL9:
 385:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
  96              		.loc 1 385 2 view .LVU34
  97              		.loc 1 385 43 is_stmt 0 view .LVU35
  98 002e 991A     		subs	r1, r3, r2
  99              		.loc 1 385 31 view .LVU36
 100 0030 5160     		str	r1, [r2, #4]
 386:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 101              		.loc 1 386 2 is_stmt 1 view .LVU37
 102              		.loc 1 386 36 is_stmt 0 view .LVU38
 103 0032 1360     		str	r3, [r2]
 387:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 388:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	/* Only one block exists - and it covers the entire usable heap space. */
 389:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 104              		.loc 1 389 2 is_stmt 1 view .LVU39
 105              		.loc 1 389 33 is_stmt 0 view .LVU40
 106 0034 084B     		ldr	r3, .L4+12
 107              	.LVL10:
 108              		.loc 1 389 33 view .LVU41
 109 0036 1960     		str	r1, [r3]
 390:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 110              		.loc 1 390 2 is_stmt 1 view .LVU42
 111              		.loc 1 390 22 is_stmt 0 view .LVU43
 112 0038 084B     		ldr	r3, .L4+16
 113 003a 1960     		str	r1, [r3]
 391:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 392:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	/* Work out the position of the top bit in a size_t variable. */
 393:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 114              		.loc 1 393 2 is_stmt 1 view .LVU44
 115              		.loc 1 393 21 is_stmt 0 view .LVU45
 116 003c 084B     		ldr	r3, .L4+20
 117 003e 4FF00042 		mov	r2, #-2147483648
 118              	.LVL11:
 119              		.loc 1 393 21 view .LVU46
 120 0042 1A60     		str	r2, [r3]
ARM GAS  /tmp/cculvRRN.s 			page 10


 394:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** }
 121              		.loc 1 394 1 view .LVU47
 122 0044 7047     		bx	lr
 123              	.LVL12:
 124              	.L3:
 354:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 125              		.loc 1 354 8 view .LVU48
 126 0046 4FF47053 		mov	r3, #15360
 127 004a E4E7     		b	.L2
 128              	.L5:
 129              		.align	2
 130              	.L4:
 131 004c 00000000 		.word	ucHeap
 132 0050 00000000 		.word	xStart
 133 0054 00000000 		.word	pxEnd
 134 0058 00000000 		.word	xMinimumEverFreeBytesRemaining
 135 005c 00000000 		.word	xFreeBytesRemaining
 136 0060 00000000 		.word	xBlockAllocatedBit
 137              		.cfi_endproc
 138              	.LFE12:
 140              		.section	.text.prvInsertBlockIntoFreeList,"ax",%progbits
 141              		.align	1
 142              		.syntax unified
 143              		.thumb
 144              		.thumb_func
 146              	prvInsertBlockIntoFreeList:
 147              	.LVL13:
 148              	.LFB13:
 395:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 396:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 397:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
 398:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** {
 149              		.loc 1 398 1 is_stmt 1 view -0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 0
 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153              		@ link register save eliminated.
 399:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** BlockLink_t *pxIterator;
 154              		.loc 1 399 1 view .LVU50
 400:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** uint8_t *puc;
 155              		.loc 1 400 1 view .LVU51
 401:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 402:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	/* Iterate through the list until a block is found that has a higher address
 403:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	than the block being inserted. */
 404:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator-
 156              		.loc 1 404 2 view .LVU52
 157              		.loc 1 404 18 is_stmt 0 view .LVU53
 158 0000 164B     		ldr	r3, .L21
 159              	.LVL14:
 160              	.L7:
 161              		.loc 1 404 57 is_stmt 1 discriminator 1 view .LVU54
 162 0002 1A46     		mov	r2, r3
 163              		.loc 1 404 39 is_stmt 0 discriminator 1 view .LVU55
 164 0004 1B68     		ldr	r3, [r3]
 165              	.LVL15:
 166              		.loc 1 404 57 discriminator 1 view .LVU56
 167 0006 8342     		cmp	r3, r0
ARM GAS  /tmp/cculvRRN.s 			page 11


 168 0008 FBD3     		bcc	.L7
 405:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	{
 406:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		/* Nothing to do here, just iterate to the right position. */
 407:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	}
 408:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 409:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	/* Do the block being inserted, and the block it is being inserted after
 410:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	make a contiguous block of memory? */
 411:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	puc = ( uint8_t * ) pxIterator;
 169              		.loc 1 411 2 is_stmt 1 view .LVU57
 170              	.LVL16:
 412:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 171              		.loc 1 412 2 view .LVU58
 172              		.loc 1 412 24 is_stmt 0 view .LVU59
 173 000a 5168     		ldr	r1, [r2, #4]
 174              		.loc 1 412 12 view .LVU60
 175 000c 02EB010C 		add	ip, r2, r1
 176              		.loc 1 412 4 view .LVU61
 177 0010 8445     		cmp	ip, r0
 178 0012 09D0     		beq	.L19
 179              	.L8:
 413:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	{
 414:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 415:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		pxBlockToInsert = pxIterator;
 416:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	}
 417:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	else
 418:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	{
 419:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		mtCOVERAGE_TEST_MARKER();
 180              		.loc 1 419 27 is_stmt 1 view .LVU62
 420:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	}
 421:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 422:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	/* Do the block being inserted, and the block it is being inserted before
 423:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	make a contiguous block of memory? */
 424:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	puc = ( uint8_t * ) pxBlockToInsert;
 181              		.loc 1 424 2 view .LVU63
 182              	.LVL17:
 425:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 183              		.loc 1 425 2 view .LVU64
 184              		.loc 1 425 29 is_stmt 0 view .LVU65
 185 0014 4168     		ldr	r1, [r0, #4]
 186              		.loc 1 425 12 view .LVU66
 187 0016 00EB010C 		add	ip, r0, r1
 188              		.loc 1 425 4 view .LVU67
 189 001a 6345     		cmp	r3, ip
 190 001c 09D0     		beq	.L20
 426:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	{
 427:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		if( pxIterator->pxNextFreeBlock != pxEnd )
 428:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
 429:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			/* Form one big block from the two blocks. */
 430:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 431:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 432:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		}
 433:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		else
 434:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
 435:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			pxBlockToInsert->pxNextFreeBlock = pxEnd;
 436:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		}
 437:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	}
 438:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	else
ARM GAS  /tmp/cculvRRN.s 			page 12


 439:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	{
 440:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 191              		.loc 1 440 3 is_stmt 1 view .LVU68
 192              		.loc 1 440 36 is_stmt 0 view .LVU69
 193 001e 0360     		str	r3, [r0]
 441:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	}
 442:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 443:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	/* If the block being inserted plugged a gab, so was merged with the block
 444:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	before and the block after, then it's pxNextFreeBlock pointer will have
 445:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	already been set, and should not be set here as that would make it point
 446:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	to itself. */
 447:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	if( pxIterator != pxBlockToInsert )
 194              		.loc 1 447 2 is_stmt 1 view .LVU70
 195              		.loc 1 447 4 is_stmt 0 view .LVU71
 196 0020 9042     		cmp	r0, r2
 197 0022 19D0     		beq	.L16
 448:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	{
 449:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 198              		.loc 1 449 3 is_stmt 1 view .LVU72
 199              		.loc 1 449 31 is_stmt 0 view .LVU73
 200 0024 1060     		str	r0, [r2]
 450:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	}
 451:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	else
 452:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	{
 453:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		mtCOVERAGE_TEST_MARKER();
 201              		.loc 1 453 27 is_stmt 1 view .LVU74
 202 0026 7047     		bx	lr
 203              	.LVL18:
 204              	.L19:
 414:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		pxBlockToInsert = pxIterator;
 205              		.loc 1 414 3 view .LVU75
 414:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		pxBlockToInsert = pxIterator;
 206              		.loc 1 414 44 is_stmt 0 view .LVU76
 207 0028 4068     		ldr	r0, [r0, #4]
 208              	.LVL19:
 414:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		pxBlockToInsert = pxIterator;
 209              		.loc 1 414 26 view .LVU77
 210 002a 0144     		add	r1, r1, r0
 211 002c 5160     		str	r1, [r2, #4]
 415:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	}
 212              		.loc 1 415 3 is_stmt 1 view .LVU78
 213              	.LVL20:
 415:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	}
 214              		.loc 1 415 19 is_stmt 0 view .LVU79
 215 002e 1046     		mov	r0, r2
 216 0030 F0E7     		b	.L8
 217              	.LVL21:
 218              	.L20:
 398:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** BlockLink_t *pxIterator;
 219              		.loc 1 398 1 view .LVU80
 220 0032 10B4     		push	{r4}
 221              	.LCFI0:
 222              		.cfi_def_cfa_offset 4
 223              		.cfi_offset 4, -4
 427:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
 224              		.loc 1 427 3 is_stmt 1 view .LVU81
 427:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
ARM GAS  /tmp/cculvRRN.s 			page 13


 225              		.loc 1 427 35 is_stmt 0 view .LVU82
 226 0034 0A4C     		ldr	r4, .L21+4
 227 0036 2468     		ldr	r4, [r4]
 427:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
 228              		.loc 1 427 5 view .LVU83
 229 0038 A342     		cmp	r3, r4
 230 003a 0BD0     		beq	.L10
 430:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 231              		.loc 1 430 4 is_stmt 1 view .LVU84
 430:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 232              		.loc 1 430 62 is_stmt 0 view .LVU85
 233 003c 5B68     		ldr	r3, [r3, #4]
 430:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 234              		.loc 1 430 32 view .LVU86
 235 003e 1944     		add	r1, r1, r3
 236 0040 4160     		str	r1, [r0, #4]
 431:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		}
 237              		.loc 1 431 4 is_stmt 1 view .LVU87
 431:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		}
 238              		.loc 1 431 49 is_stmt 0 view .LVU88
 239 0042 1368     		ldr	r3, [r2]
 431:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		}
 240              		.loc 1 431 66 view .LVU89
 241 0044 1B68     		ldr	r3, [r3]
 431:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		}
 242              		.loc 1 431 37 view .LVU90
 243 0046 0360     		str	r3, [r0]
 244              	.L11:
 447:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	{
 245              		.loc 1 447 2 is_stmt 1 view .LVU91
 447:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	{
 246              		.loc 1 447 4 is_stmt 0 view .LVU92
 247 0048 9042     		cmp	r0, r2
 248 004a 00D0     		beq	.L6
 449:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	}
 249              		.loc 1 449 3 is_stmt 1 view .LVU93
 449:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	}
 250              		.loc 1 449 31 is_stmt 0 view .LVU94
 251 004c 1060     		str	r0, [r2]
 252              		.loc 1 453 27 is_stmt 1 view .LVU95
 253              	.L6:
 454:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	}
 455:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** }
 254              		.loc 1 455 1 is_stmt 0 view .LVU96
 255 004e 5DF8044B 		ldr	r4, [sp], #4
 256              	.LCFI1:
 257              		.cfi_remember_state
 258              		.cfi_restore 4
 259              		.cfi_def_cfa_offset 0
 260 0052 7047     		bx	lr
 261              	.L10:
 262              	.LCFI2:
 263              		.cfi_restore_state
 435:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		}
 264              		.loc 1 435 4 is_stmt 1 view .LVU97
 435:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		}
 265              		.loc 1 435 37 is_stmt 0 view .LVU98
ARM GAS  /tmp/cculvRRN.s 			page 14


 266 0054 0460     		str	r4, [r0]
 267 0056 F7E7     		b	.L11
 268              	.L16:
 269              	.LCFI3:
 270              		.cfi_def_cfa_offset 0
 271              		.cfi_restore 4
 435:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		}
 272              		.loc 1 435 37 view .LVU99
 273 0058 7047     		bx	lr
 274              	.L22:
 275 005a 00BF     		.align	2
 276              	.L21:
 277 005c 00000000 		.word	xStart
 278 0060 00000000 		.word	pxEnd
 279              		.cfi_endproc
 280              	.LFE13:
 282              		.section	.text.pvPortMallocMicroROS,"ax",%progbits
 283              		.align	1
 284              		.global	pvPortMallocMicroROS
 285              		.syntax unified
 286              		.thumb
 287              		.thumb_func
 289              	pvPortMallocMicroROS:
 290              	.LVL22:
 291              	.LFB4:
  79:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
 292              		.loc 1 79 1 is_stmt 1 view -0
 293              		.cfi_startproc
 294              		@ args = 0, pretend = 0, frame = 0
 295              		@ frame_needed = 0, uses_anonymous_args = 0
  79:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
 296              		.loc 1 79 1 is_stmt 0 view .LVU101
 297 0000 38B5     		push	{r3, r4, r5, lr}
 298              	.LCFI4:
 299              		.cfi_def_cfa_offset 16
 300              		.cfi_offset 3, -16
 301              		.cfi_offset 4, -12
 302              		.cfi_offset 5, -8
 303              		.cfi_offset 14, -4
 304 0002 0446     		mov	r4, r0
  80:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** void *pvReturn = NULL;
 305              		.loc 1 80 1 is_stmt 1 view .LVU102
  81:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 306              		.loc 1 81 1 view .LVU103
 307              	.LVL23:
  83:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	{
 308              		.loc 1 83 2 view .LVU104
 309 0004 FFF7FEFF 		bl	vTaskSuspendAll
 310              	.LVL24:
  87:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
 311              		.loc 1 87 3 view .LVU105
  87:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
 312              		.loc 1 87 13 is_stmt 0 view .LVU106
 313 0008 364B     		ldr	r3, .L43
 314 000a 1B68     		ldr	r3, [r3]
  87:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
 315              		.loc 1 87 5 view .LVU107
ARM GAS  /tmp/cculvRRN.s 			page 15


 316 000c B3B1     		cbz	r3, .L42
 317              	.L24:
  93:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		}
 318              		.loc 1 93 28 is_stmt 1 view .LVU108
 100:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
 319              		.loc 1 100 3 view .LVU109
 100:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
 320              		.loc 1 100 21 is_stmt 0 view .LVU110
 321 000e 364B     		ldr	r3, .L43+4
 322 0010 1B68     		ldr	r3, [r3]
 100:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
 323              		.loc 1 100 5 view .LVU111
 324 0012 1C42     		tst	r4, r3
 325 0014 4CD1     		bne	.L35
 104:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			{
 326              		.loc 1 104 4 is_stmt 1 view .LVU112
 104:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			{
 327              		.loc 1 104 6 is_stmt 0 view .LVU113
 328 0016 002C     		cmp	r4, #0
 329 0018 4CD0     		beq	.L36
 106:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 330              		.loc 1 106 5 is_stmt 1 view .LVU114
 106:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 331              		.loc 1 106 17 is_stmt 0 view .LVU115
 332 001a 04F10802 		add	r2, r4, #8
 333              	.LVL25:
 110:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				{
 334              		.loc 1 110 5 is_stmt 1 view .LVU116
 110:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				{
 335              		.loc 1 110 7 is_stmt 0 view .LVU117
 336 001e 14F0070F 		tst	r4, #7
 337 0022 02D0     		beq	.L26
 113:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					configASSERT( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) == 0 );
 338              		.loc 1 113 6 is_stmt 1 view .LVU118
 113:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					configASSERT( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) == 0 );
 339              		.loc 1 113 18 is_stmt 0 view .LVU119
 340 0024 22F00702 		bic	r2, r2, #7
 341              	.LVL26:
 113:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					configASSERT( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) == 0 );
 342              		.loc 1 113 18 view .LVU120
 343 0028 0832     		adds	r2, r2, #8
 344              	.LVL27:
 114:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				}
 345              		.loc 1 114 6 is_stmt 1 view .LVU121
 346              	.L26:
 123:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			}
 347              		.loc 1 123 29 view .LVU122
 126:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			{
 348              		.loc 1 126 4 view .LVU123
 126:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			{
 349              		.loc 1 126 6 is_stmt 0 view .LVU124
 350 002a 002A     		cmp	r2, #0
 351 002c 51D0     		beq	.L37
 126:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			{
 352              		.loc 1 126 45 discriminator 1 view .LVU125
 353 002e 2F4B     		ldr	r3, .L43+8
 354 0030 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cculvRRN.s 			page 16


 126:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			{
 355              		.loc 1 126 28 discriminator 1 view .LVU126
 356 0032 9342     		cmp	r3, r2
 357 0034 4FD3     		bcc	.L38
 130:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				pxBlock = xStart.pxNextFreeBlock;
 358              		.loc 1 130 5 is_stmt 1 view .LVU127
 359              	.LVL28:
 131:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 360              		.loc 1 131 5 view .LVU128
 131:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 361              		.loc 1 131 13 is_stmt 0 view .LVU129
 362 0036 2E49     		ldr	r1, .L43+12
 363 0038 0C68     		ldr	r4, [r1]
 364              	.LVL29:
 132:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				{
 365              		.loc 1 132 5 is_stmt 1 view .LVU130
 132:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				{
 366              		.loc 1 132 10 is_stmt 0 view .LVU131
 367 003a 04E0     		b	.L28
 368              	.LVL30:
 369              	.L42:
  89:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		}
 370              		.loc 1 89 4 is_stmt 1 view .LVU132
 371 003c FFF7FEFF 		bl	prvHeapInit
 372              	.LVL31:
 373 0040 E5E7     		b	.L24
 374              	.LVL32:
 375              	.L39:
 134:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					pxBlock = pxBlock->pxNextFreeBlock;
 376              		.loc 1 134 22 is_stmt 0 view .LVU133
 377 0042 2146     		mov	r1, r4
 378              	.LVL33:
 135:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				}
 379              		.loc 1 135 14 view .LVU134
 380 0044 1C46     		mov	r4, r3
 381              	.LVL34:
 382              	.L28:
 132:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				{
 383              		.loc 1 132 50 is_stmt 1 view .LVU135
 132:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				{
 384              		.loc 1 132 21 is_stmt 0 view .LVU136
 385 0046 6368     		ldr	r3, [r4, #4]
 132:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				{
 386              		.loc 1 132 50 view .LVU137
 387 0048 9342     		cmp	r3, r2
 388 004a 02D2     		bcs	.L27
 132:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				{
 389              		.loc 1 132 62 discriminator 1 view .LVU138
 390 004c 2368     		ldr	r3, [r4]
 132:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				{
 391              		.loc 1 132 50 discriminator 1 view .LVU139
 392 004e 002B     		cmp	r3, #0
 393 0050 F7D1     		bne	.L39
 394              	.L27:
 140:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				{
 395              		.loc 1 140 5 is_stmt 1 view .LVU140
 140:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				{
ARM GAS  /tmp/cculvRRN.s 			page 17


 396              		.loc 1 140 17 is_stmt 0 view .LVU141
 397 0052 244B     		ldr	r3, .L43
 398 0054 1B68     		ldr	r3, [r3]
 140:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				{
 399              		.loc 1 140 7 view .LVU142
 400 0056 A342     		cmp	r3, r4
 401 0058 3FD0     		beq	.L40
 144:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 402              		.loc 1 144 6 is_stmt 1 view .LVU143
 144:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 403              		.loc 1 144 61 is_stmt 0 view .LVU144
 404 005a 0D68     		ldr	r5, [r1]
 144:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 405              		.loc 1 144 15 view .LVU145
 406 005c 0835     		adds	r5, r5, #8
 407              	.LVL35:
 148:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 408              		.loc 1 148 6 is_stmt 1 view .LVU146
 148:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 409              		.loc 1 148 48 is_stmt 0 view .LVU147
 410 005e 2368     		ldr	r3, [r4]
 148:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 411              		.loc 1 148 39 view .LVU148
 412 0060 0B60     		str	r3, [r1]
 152:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					{
 413              		.loc 1 152 6 is_stmt 1 view .LVU149
 152:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					{
 414              		.loc 1 152 19 is_stmt 0 view .LVU150
 415 0062 6368     		ldr	r3, [r4, #4]
 152:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					{
 416              		.loc 1 152 32 view .LVU151
 417 0064 9B1A     		subs	r3, r3, r2
 152:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					{
 418              		.loc 1 152 8 view .LVU152
 419 0066 102B     		cmp	r3, #16
 420 0068 10D9     		bls	.L29
 158:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 421              		.loc 1 158 7 is_stmt 1 view .LVU153
 158:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 422              		.loc 1 158 22 is_stmt 0 view .LVU154
 423 006a A018     		adds	r0, r4, r2
 424              	.LVL36:
 159:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 425              		.loc 1 159 7 is_stmt 1 view .LVU155
 426 006c 10F0070F 		tst	r0, #7
 427 0070 08D0     		beq	.L30
 159:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 428              		.loc 1 159 7 view .LVU156
 429              	.LBB12:
 430              	.LBI12:
 431              		.file 2 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
   1:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FreeRTOS Kernel V10.3.1
   3:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
ARM GAS  /tmp/cculvRRN.s 			page 18


   7:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  29:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef PORTMACRO_H
  30:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define PORTMACRO_H
  31:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  32:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef __cplusplus
  33:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern "C" {
  34:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  35:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------
  37:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Port specific definitions.
  38:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  39:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * given hardware and compiler.
  41:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  42:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * These settings should not be altered.
  43:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *-----------------------------------------------------------
  44:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  45:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  46:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Type definitions. */
  47:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCHAR		char
  48:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portFLOAT		float
  49:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDOUBLE		double
  50:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portLONG		long
  51:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSHORT		short
  52:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBASE_TYPE	long
  54:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  55:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef long BaseType_t;
  57:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef unsigned long UBaseType_t;
  58:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint16_t TickType_t;
  61:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #else
  63:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint32_t TickType_t;
ARM GAS  /tmp/cculvRRN.s 			page 19


  64:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  66:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	not need to be guarded with a critical section. */
  68:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  70:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  71:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specifics. */
  73:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  77:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Scheduler utilities. */
  79:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD() 															\
  80:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {																				\
  81:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 																				\
  84:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "isb" );													\
  88:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
  89:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  90:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  95:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  96:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Critical section management. */
  97:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortEnterCritical( void );
  98:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortExitCritical( void );
  99:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 106:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 107:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** (which build with all the ports) will build. */
 111:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 114:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 115:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Tickless idle/low power functionality. */
 116:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 120:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/cculvRRN.s 			page 20


 121:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 122:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specific optimisations. */
 123:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 126:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 127:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 129:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Generic helper function. */
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	uint8_t ucReturn;
 133:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 136:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 137:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 138:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Check the configuration. */
 139:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#endif
 142:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 143:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 147:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 149:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 151:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 153:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 154:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 155:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef configASSERT
 156:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 159:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 161:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNOP()
 162:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 163:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portINLINE	__inline
 164:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 165:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portFORCE_INLINE
 166:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 168:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 171:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** BaseType_t xReturn;
 173:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 174:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 177:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
ARM GAS  /tmp/cculvRRN.s 			page 21


 178:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 179:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdFALSE;
 180:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 181:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	else
 182:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 183:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdTRUE;
 184:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 185:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 186:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return xReturn;
 187:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 188:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 189:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 190:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 432              		.loc 2 191 30 view .LVU157
 433              	.LBB13:
 192:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulNewBASEPRI;
 434              		.loc 2 193 1 view .LVU158
 194:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 435              		.loc 2 195 2 view .LVU159
 436              		.syntax unified
 437              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 438 0072 4FF05003 			mov r3, #80												
 439 0076 83F31188 		msr basepri, r3											
 440 007a BFF36F8F 		isb														
 441 007e BFF34F8F 		dsb														
 442              	
 443              	@ 0 "" 2
 444              	.LVL37:
 445              		.thumb
 446              		.syntax unified
 447              	.L31:
 448              		.loc 2 195 2 is_stmt 0 view .LVU160
 449              	.LBE13:
 450              	.LBE12:
 159:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 451              		.loc 1 159 7 is_stmt 1 discriminator 3 view .LVU161
 159:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 452              		.loc 1 159 7 discriminator 3 view .LVU162
 453 0082 FEE7     		b	.L31
 454              	.L30:
 159:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 455              		.loc 1 159 87 discriminator 2 view .LVU163
 163:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 						pxBlock->xBlockSize = xWantedSize;
 456              		.loc 1 163 7 discriminator 2 view .LVU164
 163:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 						pxBlock->xBlockSize = xWantedSize;
 457              		.loc 1 163 34 is_stmt 0 discriminator 2 view .LVU165
 458 0084 4360     		str	r3, [r0, #4]
 164:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 459              		.loc 1 164 7 is_stmt 1 discriminator 2 view .LVU166
 164:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 460              		.loc 1 164 27 is_stmt 0 discriminator 2 view .LVU167
 461 0086 6260     		str	r2, [r4, #4]
 167:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					}
 462              		.loc 1 167 7 is_stmt 1 discriminator 2 view .LVU168
ARM GAS  /tmp/cculvRRN.s 			page 22


 463 0088 FFF7FEFF 		bl	prvInsertBlockIntoFreeList
 464              	.LVL38:
 465              	.L29:
 171:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					}
 466              		.loc 1 171 31 view .LVU169
 174:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 467              		.loc 1 174 6 view .LVU170
 174:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 468              		.loc 1 174 36 is_stmt 0 view .LVU171
 469 008c 6268     		ldr	r2, [r4, #4]
 174:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 470              		.loc 1 174 26 view .LVU172
 471 008e 1749     		ldr	r1, .L43+8
 472 0090 0B68     		ldr	r3, [r1]
 473 0092 9B1A     		subs	r3, r3, r2
 474 0094 0B60     		str	r3, [r1]
 176:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					{
 475              		.loc 1 176 6 is_stmt 1 view .LVU173
 176:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					{
 476              		.loc 1 176 30 is_stmt 0 view .LVU174
 477 0096 1749     		ldr	r1, .L43+16
 478 0098 0968     		ldr	r1, [r1]
 176:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					{
 479              		.loc 1 176 8 view .LVU175
 480 009a 8B42     		cmp	r3, r1
 481 009c 01D2     		bcs	.L32
 178:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					}
 482              		.loc 1 178 7 is_stmt 1 view .LVU176
 178:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					}
 483              		.loc 1 178 38 is_stmt 0 view .LVU177
 484 009e 1549     		ldr	r1, .L43+16
 485 00a0 0B60     		str	r3, [r1]
 486              	.L32:
 182:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					}
 487              		.loc 1 182 31 is_stmt 1 view .LVU178
 187:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					pxBlock->pxNextFreeBlock = NULL;
 488              		.loc 1 187 6 view .LVU179
 187:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					pxBlock->pxNextFreeBlock = NULL;
 489              		.loc 1 187 26 is_stmt 0 view .LVU180
 490 00a2 114B     		ldr	r3, .L43+4
 491 00a4 1B68     		ldr	r3, [r3]
 492 00a6 1343     		orrs	r3, r3, r2
 493 00a8 6360     		str	r3, [r4, #4]
 188:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				}
 494              		.loc 1 188 6 is_stmt 1 view .LVU181
 188:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				}
 495              		.loc 1 188 31 is_stmt 0 view .LVU182
 496 00aa 0023     		movs	r3, #0
 497 00ac 2360     		str	r3, [r4]
 498 00ae 02E0     		b	.L25
 499              	.LVL39:
 500              	.L35:
  81:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 501              		.loc 1 81 7 view .LVU183
 502 00b0 0025     		movs	r5, #0
 503 00b2 00E0     		b	.L25
 504              	.L36:
ARM GAS  /tmp/cculvRRN.s 			page 23


 505 00b4 0025     		movs	r5, #0
 506              	.LVL40:
 507              	.L25:
 202:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		}
 508              		.loc 1 202 28 is_stmt 1 view .LVU184
 205:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	}
 509              		.loc 1 205 39 view .LVU185
 207:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 510              		.loc 1 207 2 view .LVU186
 207:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 511              		.loc 1 207 11 is_stmt 0 view .LVU187
 512 00b6 FFF7FEFF 		bl	xTaskResumeAll
 513              	.LVL41:
 223:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	return pvReturn;
 514              		.loc 1 223 2 is_stmt 1 view .LVU188
 515 00ba 15F0070F 		tst	r5, #7
 516 00be 0ED0     		beq	.L23
 223:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	return pvReturn;
 517              		.loc 1 223 2 view .LVU189
 518              	.LBB14:
 519              	.LBI14:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 520              		.loc 2 191 30 view .LVU190
 521              	.LBB15:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 522              		.loc 2 193 1 view .LVU191
 523              		.loc 2 195 2 view .LVU192
 524              		.syntax unified
 525              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 526 00c0 4FF05003 			mov r3, #80												
 527 00c4 83F31188 		msr basepri, r3											
 528 00c8 BFF36F8F 		isb														
 529 00cc BFF34F8F 		dsb														
 530              	
 531              	@ 0 "" 2
 532              	.LVL42:
 533              		.thumb
 534              		.syntax unified
 535              	.L34:
 536              		.loc 2 195 2 is_stmt 0 view .LVU193
 537              	.LBE15:
 538              	.LBE14:
 223:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	return pvReturn;
 539              		.loc 1 223 2 is_stmt 1 discriminator 5 view .LVU194
 223:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	return pvReturn;
 540              		.loc 1 223 2 discriminator 5 view .LVU195
 541 00d0 FEE7     		b	.L34
 542              	.LVL43:
 543              	.L37:
  81:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 544              		.loc 1 81 7 is_stmt 0 view .LVU196
 545 00d2 0025     		movs	r5, #0
 546 00d4 EFE7     		b	.L25
 547              	.L38:
 548 00d6 0025     		movs	r5, #0
 549 00d8 EDE7     		b	.L25
 550              	.LVL44:
ARM GAS  /tmp/cculvRRN.s 			page 24


 551              	.L40:
  81:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 552              		.loc 1 81 7 view .LVU197
 553 00da 0025     		movs	r5, #0
 554 00dc EBE7     		b	.L25
 555              	.LVL45:
 556              	.L23:
 225:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 557              		.loc 1 225 1 view .LVU198
 558 00de 2846     		mov	r0, r5
 559 00e0 38BD     		pop	{r3, r4, r5, pc}
 560              	.LVL46:
 561              	.L44:
 225:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 562              		.loc 1 225 1 view .LVU199
 563 00e2 00BF     		.align	2
 564              	.L43:
 565 00e4 00000000 		.word	pxEnd
 566 00e8 00000000 		.word	xBlockAllocatedBit
 567 00ec 00000000 		.word	xFreeBytesRemaining
 568 00f0 00000000 		.word	xStart
 569 00f4 00000000 		.word	xMinimumEverFreeBytesRemaining
 570              		.cfi_endproc
 571              	.LFE4:
 573              		.section	.text.vPortFreeMicroROS,"ax",%progbits
 574              		.align	1
 575              		.global	vPortFreeMicroROS
 576              		.syntax unified
 577              		.thumb
 578              		.thumb_func
 580              	vPortFreeMicroROS:
 581              	.LVL47:
 582              	.LFB5:
 229:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** uint8_t *puc = ( uint8_t * ) pv;
 583              		.loc 1 229 1 is_stmt 1 view -0
 584              		.cfi_startproc
 585              		@ args = 0, pretend = 0, frame = 0
 586              		@ frame_needed = 0, uses_anonymous_args = 0
 230:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** BlockLink_t *pxLink;
 587              		.loc 1 230 1 view .LVU201
 231:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 588              		.loc 1 231 1 view .LVU202
 233:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	{
 589              		.loc 1 233 2 view .LVU203
 233:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	{
 590              		.loc 1 233 4 is_stmt 0 view .LVU204
 591 0000 80B3     		cbz	r0, .L52
 229:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** uint8_t *puc = ( uint8_t * ) pv;
 592              		.loc 1 229 1 view .LVU205
 593 0002 38B5     		push	{r3, r4, r5, lr}
 594              	.LCFI5:
 595              		.cfi_def_cfa_offset 16
 596              		.cfi_offset 3, -16
 597              		.cfi_offset 4, -12
 598              		.cfi_offset 5, -8
 599              		.cfi_offset 14, -4
 600 0004 0446     		mov	r4, r0
ARM GAS  /tmp/cculvRRN.s 			page 25


 237:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 601              		.loc 1 237 3 is_stmt 1 view .LVU206
 237:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 602              		.loc 1 237 7 is_stmt 0 view .LVU207
 603 0006 A0F10805 		sub	r5, r0, #8
 604              	.LVL48:
 240:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 605              		.loc 1 240 3 is_stmt 1 view .LVU208
 243:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		configASSERT( pxLink->pxNextFreeBlock == NULL );
 606              		.loc 1 243 3 view .LVU209
 607 000a 50F8043C 		ldr	r3, [r0, #-4]
 608 000e 164A     		ldr	r2, .L55
 609 0010 1268     		ldr	r2, [r2]
 610 0012 1342     		tst	r3, r2
 611 0014 08D1     		bne	.L47
 243:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		configASSERT( pxLink->pxNextFreeBlock == NULL );
 612              		.loc 1 243 3 view .LVU210
 613              	.LBB16:
 614              	.LBI16:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 615              		.loc 2 191 30 view .LVU211
 616              	.LBB17:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 617              		.loc 2 193 1 view .LVU212
 618              		.loc 2 195 2 view .LVU213
 619              		.syntax unified
 620              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 621 0016 4FF05003 			mov r3, #80												
 622 001a 83F31188 		msr basepri, r3											
 623 001e BFF36F8F 		isb														
 624 0022 BFF34F8F 		dsb														
 625              	
 626              	@ 0 "" 2
 627              	.LVL49:
 628              		.thumb
 629              		.syntax unified
 630              	.L48:
 631              		.loc 2 195 2 is_stmt 0 view .LVU214
 632              	.LBE17:
 633              	.LBE16:
 243:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		configASSERT( pxLink->pxNextFreeBlock == NULL );
 634              		.loc 1 243 3 is_stmt 1 discriminator 1 view .LVU215
 243:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		configASSERT( pxLink->pxNextFreeBlock == NULL );
 635              		.loc 1 243 3 discriminator 1 view .LVU216
 636 0026 FEE7     		b	.L48
 637              	.L47:
 243:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		configASSERT( pxLink->pxNextFreeBlock == NULL );
 638              		.loc 1 243 67 discriminator 2 view .LVU217
 244:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 639              		.loc 1 244 3 discriminator 2 view .LVU218
 640 0028 50F8081C 		ldr	r1, [r0, #-8]
 641 002c 41B1     		cbz	r1, .L49
 244:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 642              		.loc 1 244 3 view .LVU219
 643              	.LBB18:
 644              	.LBI18:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
ARM GAS  /tmp/cculvRRN.s 			page 26


 645              		.loc 2 191 30 view .LVU220
 646              	.LBB19:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 647              		.loc 2 193 1 view .LVU221
 648              		.loc 2 195 2 view .LVU222
 649              		.syntax unified
 650              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 651 002e 4FF05003 			mov r3, #80												
 652 0032 83F31188 		msr basepri, r3											
 653 0036 BFF36F8F 		isb														
 654 003a BFF34F8F 		dsb														
 655              	
 656              	@ 0 "" 2
 657              	.LVL50:
 658              		.thumb
 659              		.syntax unified
 660              	.L50:
 661              		.loc 2 195 2 is_stmt 0 view .LVU223
 662              	.LBE19:
 663              	.LBE18:
 244:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 664              		.loc 1 244 3 is_stmt 1 discriminator 2 view .LVU224
 244:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 665              		.loc 1 244 3 discriminator 2 view .LVU225
 666 003e FEE7     		b	.L50
 667              	.L49:
 244:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 668              		.loc 1 244 50 view .LVU226
 246:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
 669              		.loc 1 246 3 view .LVU227
 248:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			{
 670              		.loc 1 248 4 view .LVU228
 252:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 671              		.loc 1 252 5 view .LVU229
 252:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 672              		.loc 1 252 24 is_stmt 0 view .LVU230
 673 0040 23EA0203 		bic	r3, r3, r2
 674 0044 40F8043C 		str	r3, [r0, #-4]
 254:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				{
 675              		.loc 1 254 5 is_stmt 1 view .LVU231
 676 0048 FFF7FEFF 		bl	vTaskSuspendAll
 677              	.LVL51:
 257:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					traceFREE( pv, pxLink->xBlockSize );
 678              		.loc 1 257 6 view .LVU232
 257:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					traceFREE( pv, pxLink->xBlockSize );
 679              		.loc 1 257 35 is_stmt 0 view .LVU233
 680 004c 54F8041C 		ldr	r1, [r4, #-4]
 257:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					traceFREE( pv, pxLink->xBlockSize );
 681              		.loc 1 257 26 view .LVU234
 682 0050 064A     		ldr	r2, .L55+4
 683 0052 1368     		ldr	r3, [r2]
 684 0054 0B44     		add	r3, r3, r1
 685 0056 1360     		str	r3, [r2]
 258:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 686              		.loc 1 258 41 is_stmt 1 view .LVU235
 259:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 				}
 687              		.loc 1 259 6 view .LVU236
ARM GAS  /tmp/cculvRRN.s 			page 27


 688 0058 2846     		mov	r0, r5
 689 005a FFF7FEFF 		bl	prvInsertBlockIntoFreeList
 690              	.LVL52:
 261:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			}
 691              		.loc 1 261 5 view .LVU237
 261:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 			}
 692              		.loc 1 261 14 is_stmt 0 view .LVU238
 693 005e FFF7FEFF 		bl	xTaskResumeAll
 694              	.LVL53:
 270:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		}
 695              		.loc 1 270 28 is_stmt 1 view .LVU239
 273:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 696              		.loc 1 273 1 is_stmt 0 view .LVU240
 697 0062 38BD     		pop	{r3, r4, r5, pc}
 698              	.LVL54:
 699              	.L52:
 700              	.LCFI6:
 701              		.cfi_def_cfa_offset 0
 702              		.cfi_restore 3
 703              		.cfi_restore 4
 704              		.cfi_restore 5
 705              		.cfi_restore 14
 273:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 706              		.loc 1 273 1 view .LVU241
 707 0064 7047     		bx	lr
 708              	.L56:
 709 0066 00BF     		.align	2
 710              	.L55:
 711 0068 00000000 		.word	xBlockAllocatedBit
 712 006c 00000000 		.word	xFreeBytesRemaining
 713              		.cfi_endproc
 714              	.LFE5:
 716              		.section	.text.getBlockSize,"ax",%progbits
 717              		.align	1
 718              		.global	getBlockSize
 719              		.syntax unified
 720              		.thumb
 721              		.thumb_func
 723              	getBlockSize:
 724              	.LVL55:
 725              	.LFB6:
 278:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 726              		.loc 1 278 1 is_stmt 1 view -0
 727              		.cfi_startproc
 728              		@ args = 0, pretend = 0, frame = 0
 729              		@ frame_needed = 0, uses_anonymous_args = 0
 730              		@ link register save eliminated.
 280:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	BlockLink_t *pxLink;
 731              		.loc 1 280 2 view .LVU243
 281:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 732              		.loc 1 281 2 view .LVU244
 283:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	pxLink = ( void * ) puc;
 733              		.loc 1 283 2 view .LVU245
 284:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 734              		.loc 1 284 2 view .LVU246
 286:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 735              		.loc 1 286 2 view .LVU247
ARM GAS  /tmp/cculvRRN.s 			page 28


 286:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 736              		.loc 1 286 23 is_stmt 0 view .LVU248
 737 0000 50F8043C 		ldr	r3, [r0, #-4]
 286:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 738              		.loc 1 286 38 view .LVU249
 739 0004 024A     		ldr	r2, .L58
 740 0006 1068     		ldr	r0, [r2]
 741              	.LVL56:
 288:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** }
 742              		.loc 1 288 2 is_stmt 1 view .LVU250
 289:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 743              		.loc 1 289 1 is_stmt 0 view .LVU251
 744 0008 23EA0000 		bic	r0, r3, r0
 745              	.LVL57:
 289:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 746              		.loc 1 289 1 view .LVU252
 747 000c 7047     		bx	lr
 748              	.L59:
 749 000e 00BF     		.align	2
 750              	.L58:
 751 0010 00000000 		.word	xBlockAllocatedBit
 752              		.cfi_endproc
 753              	.LFE6:
 755              		.section	.text.pvPortReallocMicroROS,"ax",%progbits
 756              		.align	1
 757              		.global	pvPortReallocMicroROS
 758              		.syntax unified
 759              		.thumb
 760              		.thumb_func
 762              	pvPortReallocMicroROS:
 763              	.LVL58:
 764              	.LFB7:
 293:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	vTaskSuspendAll();
 765              		.loc 1 293 1 is_stmt 1 view -0
 766              		.cfi_startproc
 767              		@ args = 0, pretend = 0, frame = 0
 768              		@ frame_needed = 0, uses_anonymous_args = 0
 293:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	vTaskSuspendAll();
 769              		.loc 1 293 1 is_stmt 0 view .LVU254
 770 0000 70B5     		push	{r4, r5, r6, lr}
 771              	.LCFI7:
 772              		.cfi_def_cfa_offset 16
 773              		.cfi_offset 4, -16
 774              		.cfi_offset 5, -12
 775              		.cfi_offset 6, -8
 776              		.cfi_offset 14, -4
 777 0002 0546     		mov	r5, r0
 778 0004 0C46     		mov	r4, r1
 294:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 779              		.loc 1 294 2 is_stmt 1 view .LVU255
 780 0006 FFF7FEFF 		bl	vTaskSuspendAll
 781              	.LVL59:
 296:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	if (newmem != NULL && pv != NULL)
 782              		.loc 1 296 2 view .LVU256
 296:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	if (newmem != NULL && pv != NULL)
 783              		.loc 1 296 18 is_stmt 0 view .LVU257
 784 000a 2046     		mov	r0, r4
ARM GAS  /tmp/cculvRRN.s 			page 29


 785 000c FFF7FEFF 		bl	pvPortMallocMicroROS
 786              	.LVL60:
 297:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	{
 787              		.loc 1 297 2 is_stmt 1 view .LVU258
 297:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	{
 788              		.loc 1 297 5 is_stmt 0 view .LVU259
 789 0010 0646     		mov	r6, r0
 790 0012 78B1     		cbz	r0, .L61
 297:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	{
 791              		.loc 1 297 21 discriminator 1 view .LVU260
 792 0014 75B1     		cbz	r5, .L61
 793              	.LBB20:
 299:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		if (xWantedSize < count)
 794              		.loc 1 299 3 is_stmt 1 view .LVU261
 299:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		if (xWantedSize < count)
 795              		.loc 1 299 18 is_stmt 0 view .LVU262
 796 0016 2846     		mov	r0, r5
 797              	.LVL61:
 299:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		if (xWantedSize < count)
 798              		.loc 1 299 18 view .LVU263
 799 0018 FFF7FEFF 		bl	getBlockSize
 800              	.LVL62:
 299:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		if (xWantedSize < count)
 801              		.loc 1 299 10 view .LVU264
 802 001c 0838     		subs	r0, r0, #8
 803              	.LVL63:
 300:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
 804              		.loc 1 300 3 is_stmt 1 view .LVU265
 300:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		{
 805              		.loc 1 300 6 is_stmt 0 view .LVU266
 806 001e 8442     		cmp	r4, r0
 807 0020 00D3     		bcc	.L62
 299:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 		if (xWantedSize < count)
 808              		.loc 1 299 10 view .LVU267
 809 0022 0446     		mov	r4, r0
 810              	.LVL64:
 811              	.L62:
 304:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 812              		.loc 1 304 3 is_stmt 1 view .LVU268
 813 0024 2246     		mov	r2, r4
 814 0026 2946     		mov	r1, r5
 815 0028 3046     		mov	r0, r6
 816 002a FFF7FEFF 		bl	memcpy
 817              	.LVL65:
 306:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	}
 818              		.loc 1 306 3 view .LVU269
 819 002e 2846     		mov	r0, r5
 820 0030 FFF7FEFF 		bl	vPortFreeMicroROS
 821              	.LVL66:
 822              	.L61:
 306:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	}
 823              		.loc 1 306 3 is_stmt 0 view .LVU270
 824              	.LBE20:
 309:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 825              		.loc 1 309 2 is_stmt 1 view .LVU271
 309:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 826              		.loc 1 309 11 is_stmt 0 view .LVU272
ARM GAS  /tmp/cculvRRN.s 			page 30


 827 0034 FFF7FEFF 		bl	xTaskResumeAll
 828              	.LVL67:
 311:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** }
 829              		.loc 1 311 2 is_stmt 1 view .LVU273
 312:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 830              		.loc 1 312 1 is_stmt 0 view .LVU274
 831 0038 3046     		mov	r0, r6
 832 003a 70BD     		pop	{r4, r5, r6, pc}
 312:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 833              		.loc 1 312 1 view .LVU275
 834              		.cfi_endproc
 835              	.LFE7:
 837              		.section	.text.pvPortCallocMicroROS,"ax",%progbits
 838              		.align	1
 839              		.global	pvPortCallocMicroROS
 840              		.syntax unified
 841              		.thumb
 842              		.thumb_func
 844              	pvPortCallocMicroROS:
 845              	.LVL68:
 846              	.LFB8:
 316:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	vTaskSuspendAll();
 847              		.loc 1 316 1 is_stmt 1 view -0
 848              		.cfi_startproc
 849              		@ args = 0, pretend = 0, frame = 0
 850              		@ frame_needed = 0, uses_anonymous_args = 0
 316:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	vTaskSuspendAll();
 851              		.loc 1 316 1 is_stmt 0 view .LVU277
 852 0000 38B5     		push	{r3, r4, r5, lr}
 853              	.LCFI8:
 854              		.cfi_def_cfa_offset 16
 855              		.cfi_offset 3, -16
 856              		.cfi_offset 4, -12
 857              		.cfi_offset 5, -8
 858              		.cfi_offset 14, -4
 859 0002 0546     		mov	r5, r0
 860 0004 0C46     		mov	r4, r1
 317:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	size_t count = xWantedSize*num;
 861              		.loc 1 317 2 is_stmt 1 view .LVU278
 862 0006 FFF7FEFF 		bl	vTaskSuspendAll
 863              	.LVL69:
 318:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 864              		.loc 1 318 2 view .LVU279
 318:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 865              		.loc 1 318 9 is_stmt 0 view .LVU280
 866 000a 05FB04F4 		mul	r4, r5, r4
 867              	.LVL70:
 320:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****   	char *in_dest = (char*)mem;
 868              		.loc 1 320 2 is_stmt 1 view .LVU281
 320:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****   	char *in_dest = (char*)mem;
 869              		.loc 1 320 15 is_stmt 0 view .LVU282
 870 000e 2046     		mov	r0, r4
 871 0010 FFF7FEFF 		bl	pvPortMallocMicroROS
 872              	.LVL71:
 873 0014 0546     		mov	r5, r0
 874              	.LVL72:
 321:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
ARM GAS  /tmp/cculvRRN.s 			page 31


 875              		.loc 1 321 4 is_stmt 1 view .LVU283
 323:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****     	*in_dest++ = 0;
 876              		.loc 1 323 4 view .LVU284
 321:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 877              		.loc 1 321 10 is_stmt 0 view .LVU285
 878 0016 0346     		mov	r3, r0
 323:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****     	*in_dest++ = 0;
 879              		.loc 1 323 9 view .LVU286
 880 0018 03E0     		b	.L65
 881              	.LVL73:
 882              	.L66:
 324:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 883              		.loc 1 324 6 is_stmt 1 view .LVU287
 324:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 
 884              		.loc 1 324 17 is_stmt 0 view .LVU288
 885 001a 0021     		movs	r1, #0
 886 001c 03F8011B 		strb	r1, [r3], #1
 887              	.LVL74:
 323:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****     	*in_dest++ = 0;
 888              		.loc 1 323 15 view .LVU289
 889 0020 1446     		mov	r4, r2
 890              	.LVL75:
 891              	.L65:
 323:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****     	*in_dest++ = 0;
 892              		.loc 1 323 10 is_stmt 1 view .LVU290
 323:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****     	*in_dest++ = 0;
 893              		.loc 1 323 15 is_stmt 0 view .LVU291
 894 0022 621E     		subs	r2, r4, #1
 895              	.LVL76:
 323:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****     	*in_dest++ = 0;
 896              		.loc 1 323 10 view .LVU292
 897 0024 002C     		cmp	r4, #0
 898 0026 F8D1     		bne	.L66
 326:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****   	return mem;
 899              		.loc 1 326 2 is_stmt 1 view .LVU293
 326:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c ****   	return mem;
 900              		.loc 1 326 11 is_stmt 0 view .LVU294
 901 0028 FFF7FEFF 		bl	xTaskResumeAll
 902              	.LVL77:
 327:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** }
 903              		.loc 1 327 4 is_stmt 1 view .LVU295
 328:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 904              		.loc 1 328 1 is_stmt 0 view .LVU296
 905 002c 2846     		mov	r0, r5
 906 002e 38BD     		pop	{r3, r4, r5, pc}
 328:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 907              		.loc 1 328 1 view .LVU297
 908              		.cfi_endproc
 909              	.LFE8:
 911              		.section	.text.xPortGetFreeHeapSizeMicroROS,"ax",%progbits
 912              		.align	1
 913              		.global	xPortGetFreeHeapSizeMicroROS
 914              		.syntax unified
 915              		.thumb
 916              		.thumb_func
 918              	xPortGetFreeHeapSizeMicroROS:
 919              	.LFB9:
ARM GAS  /tmp/cculvRRN.s 			page 32


 332:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	return xFreeBytesRemaining;
 920              		.loc 1 332 1 is_stmt 1 view -0
 921              		.cfi_startproc
 922              		@ args = 0, pretend = 0, frame = 0
 923              		@ frame_needed = 0, uses_anonymous_args = 0
 924              		@ link register save eliminated.
 333:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** }
 925              		.loc 1 333 2 view .LVU299
 334:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 926              		.loc 1 334 1 is_stmt 0 view .LVU300
 927 0000 014B     		ldr	r3, .L69
 928 0002 1868     		ldr	r0, [r3]
 929 0004 7047     		bx	lr
 930              	.L70:
 931 0006 00BF     		.align	2
 932              	.L69:
 933 0008 00000000 		.word	xFreeBytesRemaining
 934              		.cfi_endproc
 935              	.LFE9:
 937              		.section	.text.xPortGetMinimumEverFreeHeapSizeMicroROS,"ax",%progbits
 938              		.align	1
 939              		.global	xPortGetMinimumEverFreeHeapSizeMicroROS
 940              		.syntax unified
 941              		.thumb
 942              		.thumb_func
 944              	xPortGetMinimumEverFreeHeapSizeMicroROS:
 945              	.LFB10:
 338:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	return xMinimumEverFreeBytesRemaining;
 946              		.loc 1 338 1 is_stmt 1 view -0
 947              		.cfi_startproc
 948              		@ args = 0, pretend = 0, frame = 0
 949              		@ frame_needed = 0, uses_anonymous_args = 0
 950              		@ link register save eliminated.
 339:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** }
 951              		.loc 1 339 2 view .LVU302
 340:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 952              		.loc 1 340 1 is_stmt 0 view .LVU303
 953 0000 014B     		ldr	r3, .L72
 954 0002 1868     		ldr	r0, [r3]
 955 0004 7047     		bx	lr
 956              	.L73:
 957 0006 00BF     		.align	2
 958              	.L72:
 959 0008 00000000 		.word	xMinimumEverFreeBytesRemaining
 960              		.cfi_endproc
 961              	.LFE10:
 963              		.section	.text.vPortInitialiseBlocksMicroROS,"ax",%progbits
 964              		.align	1
 965              		.global	vPortInitialiseBlocksMicroROS
 966              		.syntax unified
 967              		.thumb
 968              		.thumb_func
 970              	vPortInitialiseBlocksMicroROS:
 971              	.LFB11:
 344:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** 	/* This just exists to keep the linker quiet. */
 972              		.loc 1 344 1 is_stmt 1 view -0
 973              		.cfi_startproc
ARM GAS  /tmp/cculvRRN.s 			page 33


 974              		@ args = 0, pretend = 0, frame = 0
 975              		@ frame_needed = 0, uses_anonymous_args = 0
 976              		@ link register save eliminated.
 346:../../micro_ros_stm32cubemx_utils/extra_sources/custom_memory_manager.c **** /*-----------------------------------------------------------*/
 977              		.loc 1 346 1 view .LVU305
 978 0000 7047     		bx	lr
 979              		.cfi_endproc
 980              	.LFE11:
 982              		.section	.bss.xBlockAllocatedBit,"aw",%nobits
 983              		.align	2
 986              	xBlockAllocatedBit:
 987 0000 00000000 		.space	4
 988              		.section	.bss.xMinimumEverFreeBytesRemaining,"aw",%nobits
 989              		.align	2
 992              	xMinimumEverFreeBytesRemaining:
 993 0000 00000000 		.space	4
 994              		.section	.bss.xFreeBytesRemaining,"aw",%nobits
 995              		.align	2
 998              	xFreeBytesRemaining:
 999 0000 00000000 		.space	4
 1000              		.section	.bss.pxEnd,"aw",%nobits
 1001              		.align	2
 1004              	pxEnd:
 1005 0000 00000000 		.space	4
 1006              		.section	.bss.xStart,"aw",%nobits
 1007              		.align	2
 1010              	xStart:
 1011 0000 00000000 		.space	8
 1011      00000000 
 1012              		.section	.bss.ucHeap,"aw",%nobits
 1013              		.align	2
 1016              	ucHeap:
 1017 0000 00000000 		.space	15360
 1017      00000000 
 1017      00000000 
 1017      00000000 
 1017      00000000 
 1018              		.text
 1019              	.Letext0:
 1020              		.file 3 "/opt/st/stm32cubeide_1.16.0/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-
 1021              		.file 4 "/opt/st/stm32cubeide_1.16.0/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-
 1022              		.file 5 "/opt/st/stm32cubeide_1.16.0/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-
 1023              		.file 6 "/opt/st/stm32cubeide_1.16.0/plugins/com.st.stm32cube.ide.mcu.externaltools.gnu-tools-for-
 1024              		.file 7 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 1025              		.file 8 "<built-in>"
ARM GAS  /tmp/cculvRRN.s 			page 34


DEFINED SYMBOLS
                            *ABS*:00000000 custom_memory_manager.c
     /tmp/cculvRRN.s:21     .text.prvHeapInit:00000000 $t
     /tmp/cculvRRN.s:26     .text.prvHeapInit:00000000 prvHeapInit
     /tmp/cculvRRN.s:131    .text.prvHeapInit:0000004c $d
     /tmp/cculvRRN.s:1016   .bss.ucHeap:00000000 ucHeap
     /tmp/cculvRRN.s:1010   .bss.xStart:00000000 xStart
     /tmp/cculvRRN.s:1004   .bss.pxEnd:00000000 pxEnd
     /tmp/cculvRRN.s:992    .bss.xMinimumEverFreeBytesRemaining:00000000 xMinimumEverFreeBytesRemaining
     /tmp/cculvRRN.s:998    .bss.xFreeBytesRemaining:00000000 xFreeBytesRemaining
     /tmp/cculvRRN.s:986    .bss.xBlockAllocatedBit:00000000 xBlockAllocatedBit
     /tmp/cculvRRN.s:141    .text.prvInsertBlockIntoFreeList:00000000 $t
     /tmp/cculvRRN.s:146    .text.prvInsertBlockIntoFreeList:00000000 prvInsertBlockIntoFreeList
     /tmp/cculvRRN.s:277    .text.prvInsertBlockIntoFreeList:0000005c $d
     /tmp/cculvRRN.s:283    .text.pvPortMallocMicroROS:00000000 $t
     /tmp/cculvRRN.s:289    .text.pvPortMallocMicroROS:00000000 pvPortMallocMicroROS
     /tmp/cculvRRN.s:565    .text.pvPortMallocMicroROS:000000e4 $d
     /tmp/cculvRRN.s:574    .text.vPortFreeMicroROS:00000000 $t
     /tmp/cculvRRN.s:580    .text.vPortFreeMicroROS:00000000 vPortFreeMicroROS
     /tmp/cculvRRN.s:711    .text.vPortFreeMicroROS:00000068 $d
     /tmp/cculvRRN.s:717    .text.getBlockSize:00000000 $t
     /tmp/cculvRRN.s:723    .text.getBlockSize:00000000 getBlockSize
     /tmp/cculvRRN.s:751    .text.getBlockSize:00000010 $d
     /tmp/cculvRRN.s:756    .text.pvPortReallocMicroROS:00000000 $t
     /tmp/cculvRRN.s:762    .text.pvPortReallocMicroROS:00000000 pvPortReallocMicroROS
     /tmp/cculvRRN.s:838    .text.pvPortCallocMicroROS:00000000 $t
     /tmp/cculvRRN.s:844    .text.pvPortCallocMicroROS:00000000 pvPortCallocMicroROS
     /tmp/cculvRRN.s:912    .text.xPortGetFreeHeapSizeMicroROS:00000000 $t
     /tmp/cculvRRN.s:918    .text.xPortGetFreeHeapSizeMicroROS:00000000 xPortGetFreeHeapSizeMicroROS
     /tmp/cculvRRN.s:933    .text.xPortGetFreeHeapSizeMicroROS:00000008 $d
     /tmp/cculvRRN.s:938    .text.xPortGetMinimumEverFreeHeapSizeMicroROS:00000000 $t
     /tmp/cculvRRN.s:944    .text.xPortGetMinimumEverFreeHeapSizeMicroROS:00000000 xPortGetMinimumEverFreeHeapSizeMicroROS
     /tmp/cculvRRN.s:959    .text.xPortGetMinimumEverFreeHeapSizeMicroROS:00000008 $d
     /tmp/cculvRRN.s:964    .text.vPortInitialiseBlocksMicroROS:00000000 $t
     /tmp/cculvRRN.s:970    .text.vPortInitialiseBlocksMicroROS:00000000 vPortInitialiseBlocksMicroROS
     /tmp/cculvRRN.s:983    .bss.xBlockAllocatedBit:00000000 $d
     /tmp/cculvRRN.s:989    .bss.xMinimumEverFreeBytesRemaining:00000000 $d
     /tmp/cculvRRN.s:995    .bss.xFreeBytesRemaining:00000000 $d
     /tmp/cculvRRN.s:1001   .bss.pxEnd:00000000 $d
     /tmp/cculvRRN.s:1007   .bss.xStart:00000000 $d
     /tmp/cculvRRN.s:1013   .bss.ucHeap:00000000 $d

UNDEFINED SYMBOLS
vTaskSuspendAll
xTaskResumeAll
memcpy
